<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sVYIfIcAAAAASUVORK5CYII=
</value>
  </data>
</root>